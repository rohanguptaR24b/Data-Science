# -*- coding: utf-8 -*-
"""decisiontree.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UUj03Nzt07alxEbbizomAkVu8fwM1zLy
"""

# read the data
import pandas as pd
df = pd.read_csv("/content/diabetes.csv")
#print(df)

# preprocessing the data
from sklearn import preprocessing
le = preprocessing.LabelEncoder()

# select the features
x = df[["Pregnancies",  "Glucose" , "BloodPressure"  ,"SkinThickness" ,"Insulin"  , "BMI", "DiabetesPedigreeFunction" , "Age"  ]]
y = df[["Outcome"]]
print(x)
print(y)

# split the data
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=0)
print(x_train)
print(x_test)

#  fit and predict the data
from sklearn.tree import DecisionTreeClassifier
dt = DecisionTreeClassifier()
dt.fit(x_train,y_train)
y_pred =dt.predict(x_test)
print(y_pred)
print(y_test)


from sklearn import metrics
cnf_matrix = metrics.confusion_matrix(y_test,y_pred)
print(cnf_matrix)

from sklearn.metrics import accuracy_score
print(accuracy_score(y_test,y_pred))

from sklearn.metrics import precision_score
print(precision_score(y_test,y_pred))

from sklearn.metrics import recall_score
print(recall_score(y_test,y_pred))

from sklearn.metrics import recall_score
print(recall_score(y_test,y_pred))

# Import necessary libraries
from sklearn.tree import DecisionTreeClassifier, plot_tree
import matplotlib.pyplot as plt

# Plot the decision tree
plt.figure(figsize=(12, 8))  # Set figure size
plot_tree(dt,filled=True)

plt.title("Decision Tree Visualization")
plt.show()